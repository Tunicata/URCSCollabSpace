
sample/merge:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 82 2f 00 00    	push   0x2f82(%rip)        # 3fa8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 83 2f 00 00 	bnd jmp *0x2f83(%rip)        # 3fb0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    106f:	90                   	nop

Disassembly of section .plt.got:

0000000000001070 <__cxa_finalize@plt>:
    1070:	f3 0f 1e fa          	endbr64 
    1074:	f2 ff 25 7d 2f 00 00 	bnd jmp *0x2f7d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    107b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001080 <putchar@plt>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	f2 ff 25 2d 2f 00 00 	bnd jmp *0x2f2d(%rip)        # 3fb8 <putchar@GLIBC_2.2.5>
    108b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001090 <puts@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 25 2f 00 00 	bnd jmp *0x2f25(%rip)        # 3fc0 <puts@GLIBC_2.2.5>
    109b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010a0 <__stack_chk_fail@plt>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	f2 ff 25 1d 2f 00 00 	bnd jmp *0x2f1d(%rip)        # 3fc8 <__stack_chk_fail@GLIBC_2.4>
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010b0 <printf@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 15 2f 00 00 	bnd jmp *0x2f15(%rip)        # 3fd0 <printf@GLIBC_2.2.5>
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000010c0 <_start>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	31 ed                	xor    %ebp,%ebp
    10c6:	49 89 d1             	mov    %rdx,%r9
    10c9:	5e                   	pop    %rsi
    10ca:	48 89 e2             	mov    %rsp,%rdx
    10cd:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10d1:	50                   	push   %rax
    10d2:	54                   	push   %rsp
    10d3:	4c 8d 05 36 06 00 00 	lea    0x636(%rip),%r8        # 1710 <__libc_csu_fini>
    10da:	48 8d 0d bf 05 00 00 	lea    0x5bf(%rip),%rcx        # 16a0 <__libc_csu_init>
    10e1:	48 8d 3d f3 04 00 00 	lea    0x4f3(%rip),%rdi        # 15db <main>
    10e8:	ff 15 f2 2e 00 00    	call   *0x2ef2(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    10ee:	f4                   	hlt    
    10ef:	90                   	nop

00000000000010f0 <deregister_tm_clones>:
    10f0:	48 8d 3d 19 2f 00 00 	lea    0x2f19(%rip),%rdi        # 4010 <__TMC_END__>
    10f7:	48 8d 05 12 2f 00 00 	lea    0x2f12(%rip),%rax        # 4010 <__TMC_END__>
    10fe:	48 39 f8             	cmp    %rdi,%rax
    1101:	74 15                	je     1118 <deregister_tm_clones+0x28>
    1103:	48 8b 05 ce 2e 00 00 	mov    0x2ece(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    110a:	48 85 c0             	test   %rax,%rax
    110d:	74 09                	je     1118 <deregister_tm_clones+0x28>
    110f:	ff e0                	jmp    *%rax
    1111:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1118:	c3                   	ret    
    1119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001120 <register_tm_clones>:
    1120:	48 8d 3d e9 2e 00 00 	lea    0x2ee9(%rip),%rdi        # 4010 <__TMC_END__>
    1127:	48 8d 35 e2 2e 00 00 	lea    0x2ee2(%rip),%rsi        # 4010 <__TMC_END__>
    112e:	48 29 fe             	sub    %rdi,%rsi
    1131:	48 89 f0             	mov    %rsi,%rax
    1134:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1138:	48 c1 f8 03          	sar    $0x3,%rax
    113c:	48 01 c6             	add    %rax,%rsi
    113f:	48 d1 fe             	sar    %rsi
    1142:	74 14                	je     1158 <register_tm_clones+0x38>
    1144:	48 8b 05 a5 2e 00 00 	mov    0x2ea5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    114b:	48 85 c0             	test   %rax,%rax
    114e:	74 08                	je     1158 <register_tm_clones+0x38>
    1150:	ff e0                	jmp    *%rax
    1152:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1158:	c3                   	ret    
    1159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001160 <__do_global_dtors_aux>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	80 3d a5 2e 00 00 00 	cmpb   $0x0,0x2ea5(%rip)        # 4010 <__TMC_END__>
    116b:	75 2b                	jne    1198 <__do_global_dtors_aux+0x38>
    116d:	55                   	push   %rbp
    116e:	48 83 3d 82 2e 00 00 	cmpq   $0x0,0x2e82(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1175:	00 
    1176:	48 89 e5             	mov    %rsp,%rbp
    1179:	74 0c                	je     1187 <__do_global_dtors_aux+0x27>
    117b:	48 8b 3d 86 2e 00 00 	mov    0x2e86(%rip),%rdi        # 4008 <__dso_handle>
    1182:	e8 e9 fe ff ff       	call   1070 <__cxa_finalize@plt>
    1187:	e8 64 ff ff ff       	call   10f0 <deregister_tm_clones>
    118c:	c6 05 7d 2e 00 00 01 	movb   $0x1,0x2e7d(%rip)        # 4010 <__TMC_END__>
    1193:	5d                   	pop    %rbp
    1194:	c3                   	ret    
    1195:	0f 1f 00             	nopl   (%rax)
    1198:	c3                   	ret    
    1199:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011a0 <frame_dummy>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	e9 77 ff ff ff       	jmp    1120 <register_tm_clones>

00000000000011a9 <merge>:
    11a9:	f3 0f 1e fa          	endbr64 
    11ad:	55                   	push   %rbp
    11ae:	48 89 e5             	mov    %rsp,%rbp
    11b1:	41 57                	push   %r15
    11b3:	41 56                	push   %r14
    11b5:	41 55                	push   %r13
    11b7:	41 54                	push   %r12
    11b9:	48 83 ec 60          	sub    $0x60,%rsp
    11bd:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    11c1:	89 75 94             	mov    %esi,-0x6c(%rbp)
    11c4:	89 55 90             	mov    %edx,-0x70(%rbp)
    11c7:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
    11ca:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    11d1:	00 00 
    11d3:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    11d7:	31 c0                	xor    %eax,%eax
    11d9:	48 89 e0             	mov    %rsp,%rax
    11dc:	48 89 c6             	mov    %rax,%rsi
    11df:	8b 45 90             	mov    -0x70(%rbp),%eax
    11e2:	2b 45 94             	sub    -0x6c(%rbp),%eax
    11e5:	83 c0 01             	add    $0x1,%eax
    11e8:	89 45 b0             	mov    %eax,-0x50(%rbp)
    11eb:	8b 45 8c             	mov    -0x74(%rbp),%eax
    11ee:	2b 45 90             	sub    -0x70(%rbp),%eax
    11f1:	89 45 b4             	mov    %eax,-0x4c(%rbp)
    11f4:	8b 45 b0             	mov    -0x50(%rbp),%eax
    11f7:	48 63 d0             	movslq %eax,%rdx
    11fa:	48 83 ea 01          	sub    $0x1,%rdx
    11fe:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    1202:	48 63 d0             	movslq %eax,%rdx
    1205:	49 89 d6             	mov    %rdx,%r14
    1208:	41 bf 00 00 00 00    	mov    $0x0,%r15d
    120e:	48 63 d0             	movslq %eax,%rdx
    1211:	49 89 d4             	mov    %rdx,%r12
    1214:	41 bd 00 00 00 00    	mov    $0x0,%r13d
    121a:	48 98                	cltq   
    121c:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    1223:	00 
    1224:	b8 10 00 00 00       	mov    $0x10,%eax
    1229:	48 83 e8 01          	sub    $0x1,%rax
    122d:	48 01 d0             	add    %rdx,%rax
    1230:	bf 10 00 00 00       	mov    $0x10,%edi
    1235:	ba 00 00 00 00       	mov    $0x0,%edx
    123a:	48 f7 f7             	div    %rdi
    123d:	48 6b c0 10          	imul   $0x10,%rax,%rax
    1241:	48 89 c1             	mov    %rax,%rcx
    1244:	48 81 e1 00 f0 ff ff 	and    $0xfffffffffffff000,%rcx
    124b:	48 89 e2             	mov    %rsp,%rdx
    124e:	48 29 ca             	sub    %rcx,%rdx
    1251:	48 39 d4             	cmp    %rdx,%rsp
    1254:	74 12                	je     1268 <merge+0xbf>
    1256:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    125d:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    1264:	00 00 
    1266:	eb e9                	jmp    1251 <merge+0xa8>
    1268:	48 89 c2             	mov    %rax,%rdx
    126b:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
    1271:	48 29 d4             	sub    %rdx,%rsp
    1274:	48 89 c2             	mov    %rax,%rdx
    1277:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
    127d:	48 85 d2             	test   %rdx,%rdx
    1280:	74 10                	je     1292 <merge+0xe9>
    1282:	25 ff 0f 00 00       	and    $0xfff,%eax
    1287:	48 83 e8 08          	sub    $0x8,%rax
    128b:	48 01 e0             	add    %rsp,%rax
    128e:	48 83 08 00          	orq    $0x0,(%rax)
    1292:	48 89 e0             	mov    %rsp,%rax
    1295:	48 83 c0 03          	add    $0x3,%rax
    1299:	48 c1 e8 02          	shr    $0x2,%rax
    129d:	48 c1 e0 02          	shl    $0x2,%rax
    12a1:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    12a5:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    12a8:	48 63 d0             	movslq %eax,%rdx
    12ab:	48 83 ea 01          	sub    $0x1,%rdx
    12af:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    12b3:	48 63 d0             	movslq %eax,%rdx
    12b6:	49 89 d2             	mov    %rdx,%r10
    12b9:	41 bb 00 00 00 00    	mov    $0x0,%r11d
    12bf:	48 63 d0             	movslq %eax,%rdx
    12c2:	49 89 d0             	mov    %rdx,%r8
    12c5:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    12cb:	48 98                	cltq   
    12cd:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    12d4:	00 
    12d5:	b8 10 00 00 00       	mov    $0x10,%eax
    12da:	48 83 e8 01          	sub    $0x1,%rax
    12de:	48 01 d0             	add    %rdx,%rax
    12e1:	bf 10 00 00 00       	mov    $0x10,%edi
    12e6:	ba 00 00 00 00       	mov    $0x0,%edx
    12eb:	48 f7 f7             	div    %rdi
    12ee:	48 6b c0 10          	imul   $0x10,%rax,%rax
    12f2:	48 89 c1             	mov    %rax,%rcx
    12f5:	48 81 e1 00 f0 ff ff 	and    $0xfffffffffffff000,%rcx
    12fc:	48 89 e2             	mov    %rsp,%rdx
    12ff:	48 29 ca             	sub    %rcx,%rdx
    1302:	48 39 d4             	cmp    %rdx,%rsp
    1305:	74 12                	je     1319 <merge+0x170>
    1307:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    130e:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    1315:	00 00 
    1317:	eb e9                	jmp    1302 <merge+0x159>
    1319:	48 89 c2             	mov    %rax,%rdx
    131c:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
    1322:	48 29 d4             	sub    %rdx,%rsp
    1325:	48 89 c2             	mov    %rax,%rdx
    1328:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
    132e:	48 85 d2             	test   %rdx,%rdx
    1331:	74 10                	je     1343 <merge+0x19a>
    1333:	25 ff 0f 00 00       	and    $0xfff,%eax
    1338:	48 83 e8 08          	sub    $0x8,%rax
    133c:	48 01 e0             	add    %rsp,%rax
    133f:	48 83 08 00          	orq    $0x0,(%rax)
    1343:	48 89 e0             	mov    %rsp,%rax
    1346:	48 83 c0 03          	add    $0x3,%rax
    134a:	48 c1 e8 02          	shr    $0x2,%rax
    134e:	48 c1 e0 02          	shl    $0x2,%rax
    1352:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    1356:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%rbp)
    135d:	eb 2c                	jmp    138b <merge+0x1e2>
    135f:	8b 55 94             	mov    -0x6c(%rbp),%edx
    1362:	8b 45 ac             	mov    -0x54(%rbp),%eax
    1365:	01 d0                	add    %edx,%eax
    1367:	48 98                	cltq   
    1369:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    1370:	00 
    1371:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1375:	48 01 d0             	add    %rdx,%rax
    1378:	8b 08                	mov    (%rax),%ecx
    137a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    137e:	8b 55 ac             	mov    -0x54(%rbp),%edx
    1381:	48 63 d2             	movslq %edx,%rdx
    1384:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
    1387:	83 45 ac 01          	addl   $0x1,-0x54(%rbp)
    138b:	8b 45 ac             	mov    -0x54(%rbp),%eax
    138e:	3b 45 b0             	cmp    -0x50(%rbp),%eax
    1391:	7c cc                	jl     135f <merge+0x1b6>
    1393:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%rbp)
    139a:	eb 2f                	jmp    13cb <merge+0x222>
    139c:	8b 45 90             	mov    -0x70(%rbp),%eax
    139f:	8d 50 01             	lea    0x1(%rax),%edx
    13a2:	8b 45 a8             	mov    -0x58(%rbp),%eax
    13a5:	01 d0                	add    %edx,%eax
    13a7:	48 98                	cltq   
    13a9:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    13b0:	00 
    13b1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    13b5:	48 01 d0             	add    %rdx,%rax
    13b8:	8b 08                	mov    (%rax),%ecx
    13ba:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    13be:	8b 55 a8             	mov    -0x58(%rbp),%edx
    13c1:	48 63 d2             	movslq %edx,%rdx
    13c4:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
    13c7:	83 45 a8 01          	addl   $0x1,-0x58(%rbp)
    13cb:	8b 45 a8             	mov    -0x58(%rbp),%eax
    13ce:	3b 45 b4             	cmp    -0x4c(%rbp),%eax
    13d1:	7c c9                	jl     139c <merge+0x1f3>
    13d3:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%rbp)
    13da:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%rbp)
    13e1:	8b 45 94             	mov    -0x6c(%rbp),%eax
    13e4:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    13e7:	eb 74                	jmp    145d <merge+0x2b4>
    13e9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    13ed:	8b 55 ac             	mov    -0x54(%rbp),%edx
    13f0:	48 63 d2             	movslq %edx,%rdx
    13f3:	8b 0c 90             	mov    (%rax,%rdx,4),%ecx
    13f6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    13fa:	8b 55 a8             	mov    -0x58(%rbp),%edx
    13fd:	48 63 d2             	movslq %edx,%rdx
    1400:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    1403:	39 c1                	cmp    %eax,%ecx
    1405:	7f 2a                	jg     1431 <merge+0x288>
    1407:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    140a:	48 98                	cltq   
    140c:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    1413:	00 
    1414:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1418:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    141c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    1420:	8b 55 ac             	mov    -0x54(%rbp),%edx
    1423:	48 63 d2             	movslq %edx,%rdx
    1426:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    1429:	89 01                	mov    %eax,(%rcx)
    142b:	83 45 ac 01          	addl   $0x1,-0x54(%rbp)
    142f:	eb 28                	jmp    1459 <merge+0x2b0>
    1431:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    1434:	48 98                	cltq   
    1436:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    143d:	00 
    143e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1442:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    1446:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    144a:	8b 55 a8             	mov    -0x58(%rbp),%edx
    144d:	48 63 d2             	movslq %edx,%rdx
    1450:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    1453:	89 01                	mov    %eax,(%rcx)
    1455:	83 45 a8 01          	addl   $0x1,-0x58(%rbp)
    1459:	83 45 a4 01          	addl   $0x1,-0x5c(%rbp)
    145d:	8b 45 ac             	mov    -0x54(%rbp),%eax
    1460:	3b 45 b0             	cmp    -0x50(%rbp),%eax
    1463:	7d 3a                	jge    149f <merge+0x2f6>
    1465:	8b 45 a8             	mov    -0x58(%rbp),%eax
    1468:	3b 45 b4             	cmp    -0x4c(%rbp),%eax
    146b:	0f 8c 78 ff ff ff    	jl     13e9 <merge+0x240>
    1471:	eb 2c                	jmp    149f <merge+0x2f6>
    1473:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    1476:	48 98                	cltq   
    1478:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    147f:	00 
    1480:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1484:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    1488:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    148c:	8b 55 ac             	mov    -0x54(%rbp),%edx
    148f:	48 63 d2             	movslq %edx,%rdx
    1492:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    1495:	89 01                	mov    %eax,(%rcx)
    1497:	83 45 ac 01          	addl   $0x1,-0x54(%rbp)
    149b:	83 45 a4 01          	addl   $0x1,-0x5c(%rbp)
    149f:	8b 45 ac             	mov    -0x54(%rbp),%eax
    14a2:	3b 45 b0             	cmp    -0x50(%rbp),%eax
    14a5:	7c cc                	jl     1473 <merge+0x2ca>
    14a7:	eb 2c                	jmp    14d5 <merge+0x32c>
    14a9:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    14ac:	48 98                	cltq   
    14ae:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    14b5:	00 
    14b6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    14ba:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    14be:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    14c2:	8b 55 a8             	mov    -0x58(%rbp),%edx
    14c5:	48 63 d2             	movslq %edx,%rdx
    14c8:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    14cb:	89 01                	mov    %eax,(%rcx)
    14cd:	83 45 a8 01          	addl   $0x1,-0x58(%rbp)
    14d1:	83 45 a4 01          	addl   $0x1,-0x5c(%rbp)
    14d5:	8b 45 a8             	mov    -0x58(%rbp),%eax
    14d8:	3b 45 b4             	cmp    -0x4c(%rbp),%eax
    14db:	7c cc                	jl     14a9 <merge+0x300>
    14dd:	48 89 f4             	mov    %rsi,%rsp
    14e0:	90                   	nop
    14e1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    14e5:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    14ec:	00 00 
    14ee:	74 05                	je     14f5 <merge+0x34c>
    14f0:	e8 ab fb ff ff       	call   10a0 <__stack_chk_fail@plt>
    14f5:	48 8d 65 e0          	lea    -0x20(%rbp),%rsp
    14f9:	41 5c                	pop    %r12
    14fb:	41 5d                	pop    %r13
    14fd:	41 5e                	pop    %r14
    14ff:	41 5f                	pop    %r15
    1501:	5d                   	pop    %rbp
    1502:	c3                   	ret    

0000000000001503 <mergeSort>:
    1503:	f3 0f 1e fa          	endbr64 
    1507:	55                   	push   %rbp
    1508:	48 89 e5             	mov    %rsp,%rbp
    150b:	48 83 ec 20          	sub    $0x20,%rsp
    150f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1513:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    1516:	89 55 e0             	mov    %edx,-0x20(%rbp)
    1519:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    151c:	3b 45 e0             	cmp    -0x20(%rbp),%eax
    151f:	7d 59                	jge    157a <mergeSort+0x77>
    1521:	8b 45 e0             	mov    -0x20(%rbp),%eax
    1524:	2b 45 e4             	sub    -0x1c(%rbp),%eax
    1527:	89 c2                	mov    %eax,%edx
    1529:	c1 ea 1f             	shr    $0x1f,%edx
    152c:	01 d0                	add    %edx,%eax
    152e:	d1 f8                	sar    %eax
    1530:	89 c2                	mov    %eax,%edx
    1532:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    1535:	01 d0                	add    %edx,%eax
    1537:	89 45 fc             	mov    %eax,-0x4(%rbp)
    153a:	8b 55 fc             	mov    -0x4(%rbp),%edx
    153d:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
    1540:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1544:	89 ce                	mov    %ecx,%esi
    1546:	48 89 c7             	mov    %rax,%rdi
    1549:	e8 b5 ff ff ff       	call   1503 <mergeSort>
    154e:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1551:	8d 48 01             	lea    0x1(%rax),%ecx
    1554:	8b 55 e0             	mov    -0x20(%rbp),%edx
    1557:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    155b:	89 ce                	mov    %ecx,%esi
    155d:	48 89 c7             	mov    %rax,%rdi
    1560:	e8 9e ff ff ff       	call   1503 <mergeSort>
    1565:	8b 4d e0             	mov    -0x20(%rbp),%ecx
    1568:	8b 55 fc             	mov    -0x4(%rbp),%edx
    156b:	8b 75 e4             	mov    -0x1c(%rbp),%esi
    156e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1572:	48 89 c7             	mov    %rax,%rdi
    1575:	e8 2f fc ff ff       	call   11a9 <merge>
    157a:	90                   	nop
    157b:	c9                   	leave  
    157c:	c3                   	ret    

000000000000157d <printArray>:
    157d:	f3 0f 1e fa          	endbr64 
    1581:	55                   	push   %rbp
    1582:	48 89 e5             	mov    %rsp,%rbp
    1585:	48 83 ec 20          	sub    $0x20,%rsp
    1589:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    158d:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    1590:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1597:	eb 2d                	jmp    15c6 <printArray+0x49>
    1599:	8b 45 fc             	mov    -0x4(%rbp),%eax
    159c:	48 98                	cltq   
    159e:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    15a5:	00 
    15a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    15aa:	48 01 d0             	add    %rdx,%rax
    15ad:	8b 00                	mov    (%rax),%eax
    15af:	89 c6                	mov    %eax,%esi
    15b1:	48 8d 3d 4c 0a 00 00 	lea    0xa4c(%rip),%rdi        # 2004 <_IO_stdin_used+0x4>
    15b8:	b8 00 00 00 00       	mov    $0x0,%eax
    15bd:	e8 ee fa ff ff       	call   10b0 <printf@plt>
    15c2:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    15c6:	8b 45 fc             	mov    -0x4(%rbp),%eax
    15c9:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    15cc:	7c cb                	jl     1599 <printArray+0x1c>
    15ce:	bf 0a 00 00 00       	mov    $0xa,%edi
    15d3:	e8 a8 fa ff ff       	call   1080 <putchar@plt>
    15d8:	90                   	nop
    15d9:	c9                   	leave  
    15da:	c3                   	ret    

00000000000015db <main>:
    15db:	f3 0f 1e fa          	endbr64 
    15df:	55                   	push   %rbp
    15e0:	48 89 e5             	mov    %rsp,%rbp
    15e3:	48 83 ec 30          	sub    $0x30,%rsp
    15e7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    15ee:	00 00 
    15f0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    15f4:	31 c0                	xor    %eax,%eax
    15f6:	c7 45 e0 0c 00 00 00 	movl   $0xc,-0x20(%rbp)
    15fd:	c7 45 e4 0b 00 00 00 	movl   $0xb,-0x1c(%rbp)
    1604:	c7 45 e8 0d 00 00 00 	movl   $0xd,-0x18(%rbp)
    160b:	c7 45 ec 05 00 00 00 	movl   $0x5,-0x14(%rbp)
    1612:	c7 45 f0 06 00 00 00 	movl   $0x6,-0x10(%rbp)
    1619:	c7 45 f4 07 00 00 00 	movl   $0x7,-0xc(%rbp)
    1620:	c7 45 dc 06 00 00 00 	movl   $0x6,-0x24(%rbp)
    1627:	48 8d 3d da 09 00 00 	lea    0x9da(%rip),%rdi        # 2008 <_IO_stdin_used+0x8>
    162e:	e8 5d fa ff ff       	call   1090 <puts@plt>
    1633:	8b 55 dc             	mov    -0x24(%rbp),%edx
    1636:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    163a:	89 d6                	mov    %edx,%esi
    163c:	48 89 c7             	mov    %rax,%rdi
    163f:	e8 39 ff ff ff       	call   157d <printArray>
    1644:	8b 45 dc             	mov    -0x24(%rbp),%eax
    1647:	8d 50 ff             	lea    -0x1(%rax),%edx
    164a:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    164e:	be 00 00 00 00       	mov    $0x0,%esi
    1653:	48 89 c7             	mov    %rax,%rdi
    1656:	e8 a8 fe ff ff       	call   1503 <mergeSort>
    165b:	48 8d 3d b6 09 00 00 	lea    0x9b6(%rip),%rdi        # 2018 <_IO_stdin_used+0x18>
    1662:	e8 29 fa ff ff       	call   1090 <puts@plt>
    1667:	8b 55 dc             	mov    -0x24(%rbp),%edx
    166a:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    166e:	89 d6                	mov    %edx,%esi
    1670:	48 89 c7             	mov    %rax,%rdi
    1673:	e8 05 ff ff ff       	call   157d <printArray>
    1678:	b8 00 00 00 00       	mov    $0x0,%eax
    167d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    1681:	64 48 2b 0c 25 28 00 	sub    %fs:0x28,%rcx
    1688:	00 00 
    168a:	74 05                	je     1691 <main+0xb6>
    168c:	e8 0f fa ff ff       	call   10a0 <__stack_chk_fail@plt>
    1691:	c9                   	leave  
    1692:	c3                   	ret    
    1693:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    169a:	00 00 00 
    169d:	0f 1f 00             	nopl   (%rax)

00000000000016a0 <__libc_csu_init>:
    16a0:	f3 0f 1e fa          	endbr64 
    16a4:	41 57                	push   %r15
    16a6:	4c 8d 3d f3 26 00 00 	lea    0x26f3(%rip),%r15        # 3da0 <__frame_dummy_init_array_entry>
    16ad:	41 56                	push   %r14
    16af:	49 89 d6             	mov    %rdx,%r14
    16b2:	41 55                	push   %r13
    16b4:	49 89 f5             	mov    %rsi,%r13
    16b7:	41 54                	push   %r12
    16b9:	41 89 fc             	mov    %edi,%r12d
    16bc:	55                   	push   %rbp
    16bd:	48 8d 2d e4 26 00 00 	lea    0x26e4(%rip),%rbp        # 3da8 <__do_global_dtors_aux_fini_array_entry>
    16c4:	53                   	push   %rbx
    16c5:	4c 29 fd             	sub    %r15,%rbp
    16c8:	48 83 ec 08          	sub    $0x8,%rsp
    16cc:	e8 2f f9 ff ff       	call   1000 <_init>
    16d1:	48 c1 fd 03          	sar    $0x3,%rbp
    16d5:	74 1f                	je     16f6 <__libc_csu_init+0x56>
    16d7:	31 db                	xor    %ebx,%ebx
    16d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    16e0:	4c 89 f2             	mov    %r14,%rdx
    16e3:	4c 89 ee             	mov    %r13,%rsi
    16e6:	44 89 e7             	mov    %r12d,%edi
    16e9:	41 ff 14 df          	call   *(%r15,%rbx,8)
    16ed:	48 83 c3 01          	add    $0x1,%rbx
    16f1:	48 39 dd             	cmp    %rbx,%rbp
    16f4:	75 ea                	jne    16e0 <__libc_csu_init+0x40>
    16f6:	48 83 c4 08          	add    $0x8,%rsp
    16fa:	5b                   	pop    %rbx
    16fb:	5d                   	pop    %rbp
    16fc:	41 5c                	pop    %r12
    16fe:	41 5d                	pop    %r13
    1700:	41 5e                	pop    %r14
    1702:	41 5f                	pop    %r15
    1704:	c3                   	ret    
    1705:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    170c:	00 00 00 00 

0000000000001710 <__libc_csu_fini>:
    1710:	f3 0f 1e fa          	endbr64 
    1714:	c3                   	ret    

Disassembly of section .fini:

0000000000001718 <_fini>:
    1718:	f3 0f 1e fa          	endbr64 
    171c:	48 83 ec 08          	sub    $0x8,%rsp
    1720:	48 83 c4 08          	add    $0x8,%rsp
    1724:	c3                   	ret    
